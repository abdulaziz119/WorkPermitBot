name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build

      - name: Test
        run: npm test --if-present

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docker-image:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: workpermit-bot
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/workpermit-bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: docker-image
    runs-on: self-hosted
    environment: production
    steps:
      - name: Deploy app
        run: |
          echo "Deploying on self-hosted runner..."
          docker pull ghcr.io/${{ github.repository_owner }}/workpermit-bot:latest
          mkdir -p /srv/workpermit
          cd /srv/workpermit
          cat > docker-compose.yml <<'YML'
          version: '3.8'
          services:
            app:
              image: ghcr.io/${{ github.repository_owner }}/workpermit-bot:latest
              restart: unless-stopped
              environment:
                NODE_ENV: production
                DB_HOST: ${DB_HOST}
                DB_PORT: ${DB_PORT}
                DB_NAME: ${DB_NAME}
                DB_USER: ${DB_USER}
                DB_PASSWORD: ${DB_PASSWORD}
                DB_SCHEMA: ${DB_SCHEMA}
                BOT_TOKEN: ${BOT_TOKEN}
              ports:
                - "3000:3000"
          YML
          docker compose up -d
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_SCHEMA: ${{ secrets.DB_SCHEMA }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Post deploy check
        run: echo "Deployment completed successfully âœ…"
